* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

/* .ljudljus {
    max-width: 100%;
    overflow-x: hidden;
} */

:root {
    font-size: 3vmin;
    --header-bg-color:#9C0000;
    --bg-color: #E1E2E1;
    --button-bg-color: #D60000;
    --text-color: #01161E;
    --drk-shadow-color: #000000;
    --light-shadow-color: #FBFEF9;
    --error-bg-color: #FF7400;
    --body-font-size: 3vmin; /* vmin använder antingen 1.5vh eller 1.5vw beroende på vilken av sidorna som är kortast */
    --h1-font-family: 'Limelight', Verdana, Helvetica;
    --body-font-family: 'Open Sans', sans-serif, Arial;
    color: var(--text-color);
}
 
body {
    display: flex;
    width: 100%; 
    height: 100vh; /* ev ändra till %, om det inte fungerar på de andra sidorna, även om det blir konstigt på desktopsidan. */
    flex-direction: column;
    background-color: var(--bg-color);
    justify-content: space-between;
    align-items: center;
}

.scrollstandard {
    height: 100%;
}

i {
    color: var(--text-color);
}

.status_bar {
    flex: 0.01 0.01 auto;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    align-items: center;
    background: radial-gradient(circle, rgba(226,225,225,1) 0%, rgba(214,0,0,1) 100%);
    width: 100%; /*ev ändra till vw */
   /* min-height: 20px;
    max-height: 40px; */
}

.statusicons {
    font-size: 2vh;
}

header {
    flex: 0.15 0.15 auto;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap; /* might be dangerous */
    background-color: var(--header-bg-color);
    width: 100%; /*ev ändra till vw */
   /* min-height: 100px;
    max-height: 150px;*/
    justify-content: space-around; /* ev byt till space-between */
    align-items: center;
} /* Skapa en design där header är fixed på desktop och status-baren inte finns, Lägg också till en scroll indicator på desktop i desktop (referera till klassen i html i en media quiere, tutorial: https://www.w3schools.com/howto/howto_js_scroll_indicator.asp */

.progress-container {
    flex: 0.1 0.1 auto;
    position: sticky;
    top: 0;
    width: 100%;
    background: var(--bg-color);
    height: 0.5vh;
    z-index: 99;
} /* Lägg denna along med andra properties i media quierien */

.progress-bar {
    background:var(--text-color);
    width: 0%;
    height: 0.5vh;
    /*z-index: 98; */
}

button.small {
    display: flex;
    justify-content: center;
    align-items: center; 
    height: 5.5vmax;
    width: 5.5vmax;
    cursor: pointer;
    border-radius: 50%;
    margin: 1vmax 0 1vmax;
    border: 0.1vmax solid var(--text-color);
    background-color: var(--button-bg-color);
    transition: 400ms;
}

button#aboutus {
    text-align: center;
    color: inherit;
    font-family: var(--body-font-family);
    font-size: 1.5vmax;
    line-height: 1.8vmax; 
    font-weight: 600;
}

button.flag {
    background-color: transparent; /* För att jag är paranoid */
    background: url("../img/imagesprite.jpg") center top no-repeat;
    background-size: 10.6vmax 10.6vmax; 
}

header div:first-of-type { 
    display: flex;
    flex-direction: column;
    justify-content: center;
    /* margin: 0.5vh 0 0.5vh; */
    text-align: center; 
    align-items: center;
    margin: 0.6vmax 0;
}

/* Ändra storlek på h1 och h2 i divven */

header div h1 {
    display: inline;
    font-family: var(--h1-font-family);
    font-size: 2rem;
    font-weight: bold;
    letter-spacing: 0.5vw;
}

header div h2 {
    display: inline-block;
    font-family: var(--body-font-family);
    font-size: 1.6rem;
    font-weight: 800;
    letter-spacing: 0.2vw;
}     /* Hade kunnat använda (header div h1, header div h2) som selector ovan och endast ändrat font-family och font-size för (header div h2) under men det 
hade inte blivit lika tydligt för läsaren som att dela upp det */

header div hr {
    border: none;
    background-color: var(--text-color);
    height: 0.7vmax;
    margin: 0.1vh 0.3vw;
    width: 40vmin; /* Se till att fixa detta också med h1 och h2 så att denna inte blir för lång i jämförelse med dem */
    border-radius: 2vmax;
}

/* header div:last-of-type {
    text-align: center;
    font-family: var(--body-font-family);
    font-size: 1.1rem;
    font-weight: 600;
} */

main.flexgrid {
    flex: 3 3 auto;
    display: flex;
    justify-content: center;
    width: 100%; /* ev ändra till vw */
   /* min-height: 300px;
    max-height: 500px; */
    padding: 2vh 0;  /* Ändra i desktopdesign */
} 

main.container { 
    width: 100%; /* ev ändra till vw */
    flex: 3 3 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 4vh 0;  /* Ev ändra till vmin. Ändra i desktopdesign */
} /* Av någon konstig anledning blir min container extremt stor i bredd helt utan anledning vilket jag inte kan ta reda på varför, då jag kollat 
igenom alla child elements till den, css som beskriver den själv och även hur den opererar inuti body-flexboxen och inget tyder på att den 
borde bete sig på detta sätt.*/

article.block {
    display: flex;
    flex: 1.5 1.5 auto;
    flex-direction: column;
    align-items: center; /* gör så att allt centreras vertikal ( i mitten av mobilen) */
    justify-content: space-evenly; /* Gör så att allt centreras mot mitten av viewporten, alltså att det dras mot mittpunkten, byt ev denna till flex-start eller space-around/between/evenly */
    background-color: var(--bg-color);
    border-radius: 4vmin;
    box-shadow: 1vmin 1vmin 2vmin #bbcfda, -0.5vmin -0.5vmin 2vmin var(--light-shadow-color);
    width: 70vmin; 
    padding: 0 6vmin;
    padding-bottom: 3vmin;
    transition: all 400ms;
    font-family: var(--body-font-family);
    /* Ta bort width och height värden så att de anpassar sig efter content istället. */
}

article.wifi {
   justify-content: space-around;
}

div.wifidiv {
    display: flex;
    flex-direction: column;
    align-items: center;
}

div.logotext {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
}

.logotext h3 {
    font-size: 1.5rem;
}

div.whitebox {
    display: block;
    text-align: center;
    background-color: var(--light-shadow-color);
    padding: 1.5vmax 10vmin;
    font-weight: 600;
    font-size: 1.3rem; 
    margin-top: 1vmax;
    border-radius: 2vmin;
    /* Inga box-shadows så att den inte ser clickable ut */
}

.block video {
    background: url("../img/imagesprite.jpg") no-repeat -217px -661px; /* ev byt till background-color: var(--drk-shadow-color) eller black för att få bort vit rand. */
    background-size: cover;
    width: 46vmin; /* ev ändra till 50vmin elr dylikt */
    height: auto;
    border-radius: 1.7vmin;
    box-shadow: 1vmin 1vmin 2.5vmin var(--drk-shadow-color); /* Denna property ger en vit rand utanför videoboxen mellan videobox och skuggan, vilket blir konstigt - är ju något med boxen vilken är lätt att se i inspect, men varför blir det så? */
    transition: all 400ms;
    margin-bottom: 2vmax;

    /* Eventuellt förbättring här: skapa en som med Javascript onclick lägger till ett attribute för video, nämligen controls och så att 
    den samtidigt försvinner typ - kanske tar för mycket tid 
    https://www.w3schools.com/js/js_intro.asp
    https://www.w3schools.com/js/js_htmldom_html.asp*/
}

#arrow.animate1 {
    animation: half-spin1 1s ease-in-out 0s 1 alternate;
    animation-fill-mode: forwards;
}

#arrow.animate2 {
    animation: half-spin2 1s ease-in-out 0s 1 alternate;
    animation-fill-mode: forwards;
}

.scrollstandard .block h3 {
    align-self: flex-start;
}

nav.navgrid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(4, 1fr);
    grid-column-gap: 30vw; /* ev ändra till vmax och vmin (denna property och den under) */
    grid-row-gap: 5vh; 
}

.navgrid div {
    display: flex;
    flex-direction: column;
    justify-content: center; /* Might be unneccesary */
    align-items: center; /* same as above */
    font-family: var(--body-font-family);
}

button.large {
    display: flex;
    justify-content: center;
    align-items: center; 
    height: 9.5vmax;
    width: 9.5vmax;
    cursor: pointer;
    border-radius: 50%;
    margin: 1vmax 0 1vmax;
    border: 0.3vmax solid var(--text-color);
    background-color: var(--button-bg-color);
    transition: all 400ms;
}

h3 {
    font-size: 1.2rem;
    font-weight: 750;
}

footer {
    display: none;
    width: 100%; /* ev ändra till vw */
    flex: 0.15 0.15 auto;
}

/* .swal2-popup {
    font-family: var(--body-font-family);
}

.swal2-popup .swal2-title {
    color: var(--text-color);
    font-size: 2rem;
} - lyssnar ändå inte på dessa attribut ... */



/*div.errormessage {
    display: none;
    z-index: 200;


    
} */

@keyframes half-spin1 { 
    from { 
        transform: rotate(0deg); 
    } to { 
        transform: rotate(180deg); 
    }
}

@keyframes half-spin2 { 
    from { 
        transform: rotate(180deg); 
    } to { 
        transform: rotate(360deg); 
    }
}



/* @-ms-keyframes spin { 
    from { 
        -ms-transform: rotate(0deg); 
    } to { 
        -ms-transform: rotate(180deg); 
    }
}
@-moz-keyframes spin { 
    from { 
        -moz-transform: rotate(0deg); 
    } to { 
        -moz-transform: rotate(180deg); 
    }
}
@-webkit-keyframes spin { 
    from { 
        -webkit-transform: rotate(0deg); 
    } to { 
        -webkit-transform: rotate(180deg); 
    }
} */

/* https://www.youtube.com/watch?v=FK5DEa1Hvco - Använd javascripten från den videon (eventuellt också knappen) för 
att skapa din nya knapp på desktop, där sidan då tar dig upp till start med en smooth animation istället för instant. */

@media screen and (min-width: 768px) {
    .block p {
        font-size: 0.84rem;
    }

}



@media screen and (min-width: 992px) { /* Ev byt till 1025px då ipad pro har 1024px bredd */
/* Här läggs allt för desktop version. Tänk på att ändra stolekarna till article.block */

}





/* @keyframes shimmer {
    0% {
      background-position: top left;
    }
    100% {
      background-position: top right;
    }
  }
EV fixa till denna effekten senare, om det inte fungerar så ta bort denna keyframe */
/* min nuvarande idé är att ha en fulltäckande body som är en flexbox
med avseende på y/vertikal/ enkolumnig och bodyn skall bero på viewporten
och fylla hela och om viewporten förändras kommer även itemsen i växa/minska
i vertikal höjd (status_bar, header, nav, footer) och sedan skall contenten inuti
(bilder, text osv) vara baserad på viewporten också vilket leder till att dem
förändrar sig då viewport gör det vilket kommer säkerställa att
containrarna både täcker in alla bilder samt att storlekarna
på containrarna anpassar sig till varandra enligt flex grow och shrink
Containrarna skall alltså INTE ha några definerade höjder men definerade 
bredder vilket går ihop med en enkolumnings parent-flexbox.
Till text skall du använda vmin eller vmax som unit (googla).
En idé kan vara att använda vmax eller vmin till andra element också (som ikoner och bilder)
så du slipper välja mellan vh och vm, men tänk på att vara försiktig
Försök också använda icons från fontawesome så mycket som möjligt*/

/* De delar som skiljer sig från sida till sida bör du skapa olika klasser för så
att det enkelt går att redigera */


/* Om tid finns i slutet av projektet kan du även leka med css animationer där 
du animerar färger vilket du gjort flitigt i halloweenprojektet/mobilsidan utan
att påverka något annat i systemen, eller animerar andra properties*/

/* försök gärna att använda dig av en paralax effekt någonstans, om möjligt */

/* Lägg till en media quierie som typ sätter display: none; på massa klasser/element då 
höjden blir under 200 px eller så dylikt, så att man endast ser header och statusbar elr så,
höj då också vh, vw och vmax/vmin i den media quieries för items inuti*/

/* Istället för att använda dina ikoner till rubriker osv tar du ikoner från material.io och
använder animated icons för att göra riktigt snygga animations när man klickar på dem typ */


/* Om du inte använder ett enda grid så bör du någonstans i koden/i dokumentationen motivera varför
du valt att inte använda dig av grids. (Koppla det till ditt flexbox-system och att det
fungerar att hela responsitivtetsystemet bygger på flexbox. Eftersom ett grid-system
går att ersättas av en flexbox på ett effektivt sätt fungerar det därför bättre osv) */


/* Vissa problem font-size problem kan lösas genom att använda en font size med vmax istället för vmin. */

/* IDE TILL DESKTOPSIDAN: GÖR ETT GRID DÄR DU ANIMATAR GRID-AREAS ALTERNATIVT ANIMATAR ORDER PÅ EN FLEXBOX 
OCH SE IFALL DU KAN FÅ BOXAR ATT ÅKA RUNT I ETT GRID SYSTEM MED KEYFRAMES OSV, TYP SKAPA EN KNAPP som man klickar på */


/* Glöm inte att i slutet testa din hemsida på chrome, safari, firefox mm (se kunskapskrav för vilka)
Glöm inte heller att validera med "validator.w3.org" eller liknande för att se vad för 
saker du kan behöva fixa, men detta behöver du en live-server till (får fixa på lektion, går inte att fixa så lätt) 
Länken ovan används till html medans denna kan användas till css: "jigsaw.w3.org/css-validator" */

/* Sidan för säkringar tenderar att bli konstig i preview mode för ipad, men det är endast en bugg som uppstår ibland och om man kollar
ser man att width är densamma som på ex ljudljus osv och att textstorlek och all annan content inte varierar i bredd => fel på webbläsarvyn, och därför
har jag visat när det fungerar här: https://gyazo.com/0283fd8989bea5fb5b12768eadc851ad
Detsamma gäller för Wi-Fi sidan: https://gyazo.com/d4ca7293abb240dbc5bd02cf8cd4a142 */
  